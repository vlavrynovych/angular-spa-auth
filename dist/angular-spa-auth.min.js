"use strict";!function(){var e={UNAUTHORIZED_REDIRECT_TO_LOGIN:"Unauthorized: redirecting to the login page",MISSING_CURRENT_USER_ENDPOINT:"Endpoint for current user is not specified",MISSING_LOGIN_ENDPOINT:"Login endpoint is not specified",SUCCESS_AUTH:"Successfully authenticated",ERROR_OCCURS:"Error occurs",CANNOT_OVERRIDE_CORE:"You cannot override core service methods. Please use handlers to customize your auth process: "};angular.module("angular-spa-auth",["ngRoute"]).run(["$rootScope","$location","$timeout","AuthService",function(n,t,r,o){o.saveTarget(),n.$on("$routeChangeStart",function(n,u){o.isAuthenticated()?console.info("Loading "+t.path()):u.$$route&&!o.isPublic(u.$$route.originalPath)&&(n.preventDefault(),r(function(){console.info(e.UNAUTHORIZED_REDIRECT_TO_LOGIN),o.openLogin()}))})}]).service("AuthService",["$rootScope","$q","$http","$location",function(n,t,r,o){function u(e){g.verbose&&console.info(e)}function i(e){o.path(e)}function s(){return g.endpoints.isAuthenticated?r.get(g.endpoints.isAuthenticated).then(function(e){var n=JSON.parse(e.data);return u("isAuthenticated: "+n),n||t.reject(e.data)}):t(function(e,n){e(!0)})}function c(){s().then(function(){l.refreshCurrentUser().then(g.handlers.success,g.handlers.error)["catch"](a)})}function a(){i(g.uiRoutes.login)}var g={verbose:!1,publicUrls:["/login","/home"],endpoints:{isAuthenticated:null,currentUser:null,logout:"/logout",login:"/login"},uiRoutes:{login:"/login",home:"/home",target:null},handlers:{getHomePage:function(e){return g.uiRoutes.home},getUser:function(){if(!g.endpoints.currentUser)throw new Error(e.MISSING_CURRENT_USER_ENDPOINT);return r.get(g.endpoints.currentUser).then(function(e){return u("current user: "+JSON.stringify(e.data)),e.data})},login:function(n){if(!g.endpoints.login)throw new Error(e.MISSING_LOGIN_ENDPOINT);return r.post(g.endpoints.login,n)},success:function(n){u(e.SUCCESS_AUTH)},error:function(n){g.verbose&&console.error(e.ERROR_OCCURS,n)}},mixins:{}},l={isPublic:function(e){return g.publicUrls.some(function(n){return e.indexOf(n)>-1})},saveTarget:function(){g.uiRoutes.target=o.path(),u("Target route is saved: "+g.uiRoutes.target)},openTarget:function(){g.uiRoutes.target=g.uiRoutes.target||g.handlers.getHomePage(n.currentUser),i(g.uiRoutes.target),u("Redirected to the target route: "+g.uiRoutes.target),l.clearTarget()},clearTarget:function(){g.uiRoutes.target=null},openLogin:a,openHome:function(){i(g.handlers.getHomePage(n.currentUser))},getCurrentUser:function(){return n.currentUser?n.currentUser:l.refreshCurrentUser()},refreshCurrentUser:function(){return g.handlers.getUser().then(function(e){return n.currentUser=e,l.openTarget(),e})},isAuthenticated:function(){return!!n.currentUser},logout:function(){r.get(g.endpoints.logout).then(function(){n.currentUser=null,a()})},run:function(n){if(n&&(g=angular.merge(g,n),n.mixins)){for(var t in n.mixins)if(l.hasOwnProperty(t))throw new Error(e.CANNOT_OVERRIDE_CORE+t);angular.merge(l,n.mixins)}c()},login:function(e){g.handlers.login(e).then(l.refreshCurrentUser).then(g.handlers.success)["catch"](g.handlers.error)}};return l}])}();
//# sourceMappingURL=angular-spa-auth.min.js.map
